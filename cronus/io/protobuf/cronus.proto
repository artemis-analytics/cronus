//
// Cronus Metastore Model
//    Artemis Jobs require
//        Dataset
//            Partition
//                Files
//                Histograms
//                Tables
//        Menu
//        Configuration
//    Artemis Jobs output
//        Dataset
//            Partition
//                Process metadata (must be mergable)
//                Histograms (must be mergable)
//                Files (Data)
//                Logs
//                Tables (Schemas) (must be mergable)

//    Each required input/output
//    produces a protobuf serialized, persisted message
//    these will be stored/retrieved via uuids
//    through common stores

//    The stores provide the name and identifier
//    of persisted metadata along with additional metadata.
//    This enables separating the storage of the Artemis job configuration
//    from the messages required when running an artemis job.

//    Stores can loaded, information retrieved, and closed.
//    MenuObject points to a persisted menu, gets loaded
//    ConfigObject points to a persisted job configuration, get loaded
//    HistogramCollection points to a persisted or newly created collection
//    Dataset points to persisted or newly created dataset.
//    Dataset object is part of the Artemis job.
//      Access to the partitions, tables, and files is required before, during, after processing

//    A top-level Artemis Store
//        DataStore
//        MenuStore
//        ConfigurationStore
//        HistogramStore

syntax = "proto3";
import "google/protobuf/timestamp.proto";


message CronusStore {
    // Store of Artemis Metadata
    // 
    string name = 1;
    string uuid = 2;
    CronusStoreInfo info = 3;
    
}

message CronusStoreInfo {
    // Absolute location of persisted store
    // ArtemStore holds 
    // A store of menus
    // A store of Artemis configurations
    // A store of Artemis datasets
    // Enables multiple top-level stores to be created
    string path = 1;
    google.protobuf.Timestamp created = 2;
    CronusStoreAuxInfo aux = 3;
    ChildStore menu_store = 4;
    ChildStore config_store = 5;
    ChildStore data_store = 6;
}

message CronusStoreAuxInfo {
    string description = 1;
}

message ChildStore {
  string name = 1;
  string uuid = 2;
  oneof info {
    ChildStoreInfo menu_store_info = 3;
    ChildStoreInfo config_store_info = 4;
    ChildStoreInfo data_store_info = 5;
  }
}

message ChildStoreInfo {
  ChildStoreAuxInfo aux = 1;
  repeated CronusObject objects = 2;

}

message ChildStoreAuxInfo {
  string description = 1;
}

message CronusObject {
  string name = 1;
  string uuid = 2;
  oneof info {
    MenuObjectInfo menu = 4; // Statistical Business Process Model (Protobuf)
    ConfigObjectInfo config = 5; // Artemis Configuration Proto (Protobuf)
    HistsObjectInfo hists = 6; // Artemis HistCollection Output Proto (Protobuf)
    JobObjectInfo job = 7; // Artemis Output Process Metadata Proto (Protobuf)
    LogObjectInfo log = 8; // Artemis Log File output (Text File)
    FileObjectInfo file = 9; // Artemis Arrow RecordBatchFile (Arrow)
    TableObjectInfo table = 10; // Artemis Table (Protobuf -- bulk of the metadata relating to a partition)
    DatasetObjectInfo dataset = 11; // Dataset metadata model (Protobuf)
    PartitionObjectInfo partition = 12; // Consistent collection of output with common schema
  }
}

// CronosObjects all have oneof types of Info objects
// Info objects are the top-level metadata for an object
// Info objects hold an Auxilliary Info message also

message MenuObjectInfo {
    MenuObjectAuxInfo aux = 1;
}

message MenuObjectAuxInfo {
    string description = 1;
}

message ConfigObjectInfo {
    ConfigObjectAuxInfo aux = 1;
}

message ConfigObjectAuxInfo {
    string description = 1;
}

message HistsObjectInfo {
    HistsObjectAuxInfo aux = 2;
    repeated string keys = 1;
}

message HistsObjectAuxInfo {
    string description = 1;
    map<string,string> meta = 2;
}

message JobObjectInfo {
    JobObjectAuxInfo aux = 1;
}

message JobObjectAuxInfo {
    string description = 1;
}

message LogObjectInfo {
    LogObjectAuxInfo aux = 1;
}

message LogObjectAuxInfo {
    string description = 1;
}

message DatasetObjectInfo {
    DatasetObjectAuxInfo aux = 1;
    Transform transform = 4;
    repeated CronusObject partitions = 2;
    repeated CronusObject jobs = 5;
    repeated CronusObject hists = 6;
    repeated CronusObject logs = 7;
    string storage_location = 8; // Alternative location for data, e.g. files, logs, protos
}

message DatasetObjectAuxInfo {
    string description = 1;
}

message Transform {
  CronusObject menu = 1;
  CronusObject config = 2;
}

message PartitionObjectInfo {
    PartitionObjectAuxInfo aux = 1;
    repeated CronusObject files = 2;
    repeated CronusObject tables = 4;
    // Merged Table representing common Schema for all files in partition
    CronusObject table = 8;
    string filestorepath = 9;
}

message PartitionObjectAuxInfo {
    string description = 1;
}

enum FileType {
    NONE = 0;
    CSV = 1;
    FWF = 2;
    JSON = 3;
    PARQUET = 4;
    ARROW = 5;
    ARROW_STREAM = 6;
}

message FileObjectInfo {
    FileObjectAuxInfo aux = 1;
    FileType type = 2;
    int64 size_bytes = 3;
    repeated Block blocks = 4;
}

message FileObjectAuxInfo {
    string description = 1;
    int32 num_columns = 2;
    int32 num_rows = 3;
    int32 num_batches = 4;

}

message Block {
    int32 index = 1;
    BlockInfo info = 2;
}

message BlockInfo {
    int64 size_bytes = 1;
    int64 offset = 2;
    int64 length = 3;
}

message TableObjectInfo {
    TableObjectAuxInfo aux = 1;
    Schema schema = 2;
}

message TableObjectAuxInfo {
    string description = 1;
}

message Schema {
    string name = 1;
    string uuid = 2;
    SchemaInfo info = 3;
}

message SchemaInfo {
    SchemaAuxInfo aux = 1;
    repeated Field fields = 2;
}

message SchemaAuxInfo {
    string description = 1;
    bytes raw_header = 2;
    bytes raw_footer = 3;
}

message Field {
    string name = 1;
    string uuid = 2;
    FieldInfo info = 3;
}

message FieldInfo {
    FieldAuxInfo aux = 1;
    string type = 2;
    bool nullable = 3;
    repeated Field children = 4;
}

message FieldAuxInfo {
    string description = 1;
    map<string, string> meta = 2; 
}

/////////////////////////////////////





